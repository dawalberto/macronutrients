---

---

<div class='mx-auto w-full'><canvas id='chart'></canvas></div>
<script>
	import {
		gramsOfFatsInDefinition,
		gramsOfProteinsInDefinition,
		gramsOfProteinsInMaintain,
		gramsOfProteinsInSurplus,
		percentageOfFatsInSurplus,
	} from '@lib/settings'
	import { $userAttributes } from '@store/user-attributes'
	import { chartConfiguration } from '@utils/chart-config'
	import { getChartTitle, getLabels } from '@utils/chart-functions'
	import Chart, { type ChartItem } from 'chart.js/auto'
	import { listenKeys } from 'nanostores'
	const chartElement = document.getElementById('chart') as ChartItem

	const chart = new Chart(chartElement, chartConfiguration)

	listenKeys($userAttributes, ['goal', 'lbm', 'bmrAndExercise'], ({ bmrAndExercise, lbm, goal }) => {
		let proteinGrams = 0
		let fatGrams = 0
		let carbGrams = 0
		let kcalPerDay = 0

		switch (goal) {
			case 'Maintain':
				proteinGrams = gramsOfProteinsInMaintain * lbm.lbmKg
				fatGrams = lbm.lbmKg
				carbGrams = (bmrAndExercise.kcalPerDayToMaintain - (proteinGrams * 4 + fatGrams * 9)) / 4
				kcalPerDay = bmrAndExercise.kcalPerDayToMaintain
				break
			case 'Surplus':
				proteinGrams = gramsOfProteinsInSurplus * lbm.lbmKg
				fatGrams = (percentageOfFatsInSurplus * bmrAndExercise.kcalPerDayToSurplus) / 9
				carbGrams = (bmrAndExercise.kcalPerDayToSurplus - (proteinGrams * 4 + fatGrams * 9)) / 4
				kcalPerDay = bmrAndExercise.kcalPerDayToSurplus
				break
			case 'Definition':
				proteinGrams = gramsOfProteinsInDefinition * lbm.lbmKg
				fatGrams = gramsOfFatsInDefinition * lbm.lbmKg
				carbGrams = (bmrAndExercise.kcalPerDayToDefinition - (proteinGrams * 4 + fatGrams * 9)) / 4
				kcalPerDay = bmrAndExercise.kcalPerDayToDefinition
				break
		}

		proteinGrams = Math.round(proteinGrams)
		fatGrams = Math.round(fatGrams)
		carbGrams = Math.round(carbGrams)

		chart.data.labels = getLabels(carbGrams, fatGrams, proteinGrams)
		if (chart.options.plugins?.title?.text) {
			chart.options.plugins.title.text = getChartTitle(kcalPerDay)
		}
		if (chart.data.datasets[0]?.data) {
			chart.data.datasets[0].data = [carbGrams * 4, fatGrams * 9, proteinGrams * 4]
		}

		chart.update()
	})
</script>
